DATABASE = waselni
DATABASE_HOST = localhost
DATABASE_PORT = 3307
DATABASE_USER = root
DATABASE_PASSWORD = 

GMAIL_USER=karim.nafti.10@gmail.com
GMAIL_PASSWORD=vtmt itzt zqzi qibf

//api in server.js ://
REGISTER_API=/api/register
SELECT_USER_QUERY=SELECT * FROM users WHERE email = ?
INSERT_USER_QUERY=INSERT INTO users (firstname, lastname, age, gender, phonenumber, email, password, country) VALUES (?, ?, ?, ?, ?, ?, ?, ?)

LOGIN_API=/api/login
SELECT_USER_BY_EMAIL=SELECT * FROM users WHERE email = ?
LOGIN_FETCH_FRIENDS_QUERY=SELECT users.id, users.firstname, users.lastname, users.email, users.photo FROM friends JOIN users ON users.id = friends.id_friend WHERE friends.id_user = ? AND accept = 1 UNION SELECT users.id, users.firstname, users.lastname, users.email, users.photo FROM friends JOIN users ON users.id = friends.id_user WHERE friends.id_friend = ? AND accept = 1

SEARCH_API=/api/search
SEARCH_QUERY=SELECT u.id, u.firstname, u.lastname, u.email, u.photo, f.user_request FROM users u LEFT JOIN friends f ON u.id = f.id_friend AND f.id_user = ? WHERE u.firstname LIKE ? OR u.lastname LIKE ?

UPLOAD_PROFILE_PIC_API=/api/upload-profile-pic
UPDATE_PROFILE_PIC_QUERY=UPDATE users SET photo = ? WHERE id = ?

UPDATE_PROFILE_API=/api/update-profile
FETCH_USER_BY_ID_QUERY=SELECT * FROM users WHERE id = ?
UPDATE_USER_QUERY=UPDATE users SET

ADD_FRIEND_API=/api/addfriend
CHECK_FRIEND_EXISTS_QUERY=SELECT * FROM friends WHERE id_user = ? AND id_friend = ?
ADD_FRIEND_QUERY=INSERT INTO friends (id_user, id_friend, user_request) VALUES (?, ?, 1)
CHECK_RECIPROCAL_REQUEST_QUERY=SELECT * FROM friends WHERE id_user = ? AND id_friend = ?
UPDATE_FRIEND_ACCEPT_QUERY=UPDATE friends SET accept = 1 WHERE (id_user = ? AND id_friend = ?) OR (id_user = ? AND id_friend = ?)
ADDFRIEND_FETCH_FRIENDS_QUERY=SELECT users.id, users.firstname, users.lastname, users.email, users.photo FROM users JOIN friends ON users.id = friends.id_friend WHERE friends.id_user = ? AND accept = 1 UNION SELECT users.id, users.firstname, users.lastname, users.email, users.photo FROM friends JOIN users ON users.id = friends.id_user WHERE friends.id_friend = ? AND accept = 1

FRIEND_DETAILS_API=/api/friends/:id
FETCH_FRIEND_DETAILS_QUERY=SELECT * FROM users WHERE id = ?

SEND_MESSAGE_API=/api/messages
INSERT_MESSAGE_QUERY=INSERT INTO messages (messagedate, message, senderid, receiverid) VALUES (?, ?, ?, ?)

GET_MESSAGES_API=/api/messages
GET_MESSAGES_QUERY=SELECT * FROM messages WHERE (senderid = ? AND receiverid = ?) OR (senderid = ? AND receiverid = ?) ORDER BY messagedate

RESET_API=/api/reset
RESET_USER_QUERY=SELECT id, email FROM users WHERE email = ? OR phonenumber = ?
RESET_LINK_BASE_URL=http://localhost:3000/resetpassword

RESET_PASSWORD_API=/api/resetpassword
UPDATE_PASSWORD_QUERY=UPDATE users SET password = ? WHERE id = ?

DELETE_FRIEND_API=/api/deletefriend/:friendId
DELETE_FRIEND_QUERY=DELETE FROM friends WHERE (id_user = ? AND id_friend = ? AND accept = 1) OR (id_user = ? AND id_friend = ? AND accept = 1)
DELETEFRIEND_FETCH_FRIENDS_QUERY=SELECT users.id, users.firstname, users.lastname, users.email, users.photo FROM users JOIN friends ON users.id = friends.id_friend WHERE friends.id_user = ? AND accept = 1 UNION SELECT users.id, users.firstname, users.lastname, users.email, users.photo FROM friends JOIN users ON users.id = friends.id_user WHERE friends.id_friend = ? AND accept = 1;

UPLOAD_PHOTO_PATH=/uploads/photos/
UPLOAD_VIDEO_PATH=/uploads/videos/
UPLOAD_AUDIO_PATH=/uploads/songs/
QUERY_INSERT_POST=INSERT INTO posts (post, photo, video, song, date, posterId) VALUES (?, ?, ?, ?, NOW(), ?)

QUERY_FETCH_POSTS=SELECT posts.*, users.firstname AS posterFirstname, users.lastname AS posterLastname, users.photo AS posterPhoto FROM users JOIN posts ON posts.posterid = users.id LEFT JOIN friends ON ((friends.id_user = ? AND friends.id_friend = posts.posterid) OR (friends.id_user = posts.posterid AND friends.id_friend = ?)) WHERE (posts.posterid = ? OR friends.accept = 1) ORDER BY posts.date DESC;

QUERY_FETCH_MUSIC=SELECT posts.song AS song, posts.post, users.firstname AS posterFirstname, users.lastname AS posterLastname, users.photo AS posterPhoto FROM users JOIN posts ON posts.posterid = users.id LEFT JOIN friends ON ((friends.id_user = ? AND friends.id_friend = posts.posterid) OR (friends.id_user = posts.posterid AND friends.id_friend = ?)) WHERE (posts.posterid = ? OR friends.accept = 1) AND posts.song IS NOT NULL ORDER BY posts.date DESC;

QUERY_FETCH_VIDEOS=SELECT posts.video AS video, posts.post, users.firstname AS posterFirstname, users.lastname AS posterLastname, users.photo AS posterPhoto FROM users JOIN posts ON posts.posterid = users.id LEFT JOIN friends ON ((friends.id_user = ? AND friends.id_friend = posts.posterid) OR (friends.id_user = posts.posterid AND friends.id_friend = ?)) WHERE (posts.posterid = ? OR friends.accept = 1) AND posts.video IS NOT NULL ORDER BY posts.date DESC;

QUERY_FETCH_PHOTOS=SELECT posts.photo AS photo, posts.post, users.firstname AS posterFirstname, users.lastname AS posterLastname, users.photo AS posterPhoto FROM users JOIN posts ON posts.posterid = users.id LEFT JOIN friends ON ((friends.id_user = ? AND friends.id_friend = posts.posterid) OR (friends.id_user = posts.posterid AND friends.id_friend = ?)) WHERE (posts.posterid = ? OR friends.accept = 1) AND posts.photo IS NOT NULL ORDER BY posts.date DESC;

